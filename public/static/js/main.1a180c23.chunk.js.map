{"version":3,"sources":["components/Loader/Loader.jsx","components/ChartArtists/ChartArtistsItem.jsx","components/ChartArtists/ChartArtistsList.jsx","components/SearchForm/SearchForm.jsx","components/ArtistSearch/ArtistSearchCard.jsx","components/ArtistSearch/ArtistSearch.jsx","components/MainPage/MainPage.jsx","components/ArtistTopTracks/TrackItem.jsx","components/ArtistTopTracks/ArtistTopTracks.jsx","components/ArtistAlbums/ArtistAlbums.jsx","components/ArtistComments/ArtistComments.jsx","utils/utils.js","components/SingleArtist/SingleArtistDetails.jsx","components/SingleArtist/SingleArtistPage.jsx","components/SingleAlbum/SingleAlbumDetails.jsx","components/SingleAlbum/SingleAlbumPage.jsx","App.js","index.js"],"names":["Loader","className","ChartArtistsItem","artist","id","position","picture_big","name","key","to","src","alt","ChartArtistList","chartArtists","data","map","SearchForm","searchByArtist","useState","userQuery","setUserQuery","onSubmit","event","preventDefault","noSpacesQuery","split","join","type","value","onChange","target","placeholder","required","ArtistSearchCard","ArtistSearch","setArtist","ARTIST_QUERY","gql","useQuery","loading","query","MainPage","CHART_ARTISTS_QUERY","ChartArtistsList","TrackItem","topArtistTracks","style","marginBottom","track","title_short","preview","contributors","title","frameBorder","length","contributor","index","ArtistTopTracks","artist_id","ARTIST_TOP_TRACKS_QUERY","ArtistAlbums","ALBUMS_QUERY","artistAlbums","album","cover_medium","release_date","explicit_lyrics","ArtistComments","comments","ARTIST_COMMENTS_QUERY","artistComments","filter","comment","text","every","word","SingleArtistDetails","SingleArtistPage","SingleAlbumTrack","singleAlbum","fans","tracks","SingleAlbum","album_id","SINGLE_ALBUM_QUERY","SingleAlbumDetails","App","primary","path","SingleAlbumPage","httpLink","createHttpLink","uri","cache","InMemoryCache","client","ApolloClient","link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a180c23.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loadingio-spinner-cube-a1drmf4bq2\">\n      <div className=\"ldio-b5x4q7m52cr\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst ChartArtistsItem = ({ artist: { id, position, picture_big, name } }) => {\n  return (\n    <li key={id}>\n      <h2>{position}</h2>\n      <Link to={`/artist/${id}`}>\n        <img src={picture_big} alt=\"Artist cover\" />\n      </Link>\n      <h1>{name}</h1>\n    </li>\n  );\n};\n\nexport default ChartArtistsItem;\n","import React from \"react\";\n\nimport ChartArtistsItem from \"./ChartArtistsItem\";\n\nconst ChartArtistList = ({ data: { chartArtists } }) => {\n  return (\n    <main>\n      <ul className=\"chart-list\">\n        {chartArtists.map(artist => {\n          const { id } = artist;\n          return <ChartArtistsItem key={id} artist={artist} />;\n        })}\n      </ul>\n    </main>\n  );\n};\n\nexport default ChartArtistList;\n","import React, { useState } from \"react\";\n\nconst SearchForm = ({ searchByArtist }) => {\n  const [userQuery, setUserQuery] = useState(\"\");\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const noSpacesQuery = userQuery.split(\" \").join(\"\");\n    searchByArtist(noSpacesQuery);\n    setUserQuery(\"\");\n  };\n\n  return (\n    <section className=\"search-form\">\n      <form onSubmit={onSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            name=\"userInput\"\n            value={userQuery}\n            onChange={event => setUserQuery(event.target.value)}\n            placeholder=\"Search\"\n            required\n          />\n          <button className=\"icon\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst ArtistSearchCard = ({\n  data: {\n    artist: { name, picture_big, id }\n  }\n}) => {\n  return (\n    <section className=\"artist-search-display\">\n      {picture_big ? (\n        <Link to={`/artist/${id}`}>\n          <img src={picture_big} alt=\"Artist cover\" />\n        </Link>\n      ) : null}\n      <h1>{name}</h1>\n    </section>\n  );\n};\n\nexport default ArtistSearchCard;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nimport Loader from \"../Loader/Loader\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport ArtistSearchCard from \"./ArtistSearchCard\";\n\nconst ArtistSearch = () => {\n  const [artist, setArtist] = useState(\"\");\n\n  const ARTIST_QUERY = gql`\n    query artistQuery {\n      artist(name: \"${artist}\") {\n        name\n        id\n        picture_big\n      }\n    }\n  `;\n\n  const { loading, data } = useQuery(ARTIST_QUERY);\n\n  return (\n    <>\n      <SearchForm searchByArtist={query => setArtist(query)} />\n      {loading ? <Loader /> : <ArtistSearchCard data={data} />}\n    </>\n  );\n};\n\nexport default ArtistSearch;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Loader from \"../Loader/Loader\";\nimport ChartArtistsList from \"../ChartArtists/ChartArtistsList\";\nimport ArtistSearch from \"../ArtistSearch/ArtistSearch\";\n\nconst MainPage = () => {\n  const CHART_ARTISTS_QUERY = gql`\n    query chartArtistsQuery {\n      chartArtists {\n        id\n        name\n        picture_big\n        position\n      }\n    }\n  `;\n\n  const { loading, data } = useQuery(CHART_ARTISTS_QUERY);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <>\n      <ChartArtistsList data={data} />\n      <ArtistSearch />\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\n\nconst TrackItem = ({ data: { topArtistTracks } }) => {\n  return (\n    <>\n      <h2 style={{ marginBottom: \"1rem\" }}>Top Tracks</h2>\n      <ul className=\"track-item-container\">\n        {topArtistTracks.map(track => {\n          const { title_short, preview, contributors } = track;\n          return (\n            <li key={title_short}>\n              <p>{title_short}</p>\n              <iframe title={title_short} frameBorder=\"0\" src={preview} />\n              {contributors.length > 3 ? (\n                <h4>{contributors[0].name}</h4>\n              ) : (\n                contributors.map((contributor, index) => {\n                  const { name } = contributor;\n                  return <h4 key={index}>{name}</h4>;\n                })\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default TrackItem;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Loader from \"../Loader/Loader\";\nimport TrackItem from \"./TrackItem\";\n\nconst ArtistTopTracks = ({ artist_id }) => {\n  const ARTIST_TOP_TRACKS_QUERY = gql`\n  query artistTopTracksQuery {\n    topArtistTracks(id: \"${artist_id}\") {\n      title_short\n      preview\n      contributors {\n        name\n      }\n    }\n  }\n  `;\n\n  const { loading, data } = useQuery(ARTIST_TOP_TRACKS_QUERY);\n\n  return loading ? <Loader /> : <TrackItem data={data} />;\n};\n\nexport default ArtistTopTracks;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Link } from \"@reach/router\";\n\nimport Loader from \"../Loader/Loader\";\n\nconst ArtistAlbums = ({ artist_id }) => {\n  const ALBUMS_QUERY = gql`\n  query albumsQuery {\n    artistAlbums(id: \"${artist_id}\") {\n      id\n      title\n      cover_medium\n      release_date\n      explicit_lyrics\n    }\n  }\n  `;\n\n  const { loading, data } = useQuery(ALBUMS_QUERY);\n\n  if (loading) return <Loader />;\n\n  const { artistAlbums } = data;\n\n  return (\n    <ul className=\"albums-list\">\n      {artistAlbums.map(album => {\n        const {\n          id,\n          title,\n          cover_medium,\n          release_date,\n          explicit_lyrics\n        } = album;\n        return (\n          <li key={id}>\n            <Link to={`/album/${id}`} className=\"album-link\">\n              <img src={cover_medium} alt=\"Album cover\" />\n            </Link>\n            <h3>{title}</h3>\n            <h4>Released on {release_date}</h4>\n            {explicit_lyrics ? <p>Explicit</p> : null}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ArtistAlbums;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Loader from \"../Loader/Loader\";\nimport { commentsCheck } from \"../../utils/utils\";\n\nconst ArtistComments = ({ artist_id }) => {\n  const ARTIST_COMMENTS_QUERY = gql`\n  query artistCommentsQuery {\n    artistComments(id: \"${artist_id}\") {\n      text\n      id\n    }\n  }\n  `;\n\n  const { loading, data } = useQuery(ARTIST_COMMENTS_QUERY);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <ul className=\"artist-comments\">\n      {commentsCheck(data.artistComments).map(comment => {\n        const { text, id } = comment;\n        return (\n          <li key={id}>\n            <p>{`\" ${text} \"`}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ArtistComments;\n","export const commentsCheck = comments => {\n  return comments.filter(comment =>\n    comment.text.split(\" \").every(word => word.length < 10)\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport ArtistTopTracks from \"../ArtistTopTracks/ArtistTopTracks\";\nimport ArtistAlbums from \"../ArtistAlbums/ArtistAlbums\";\nimport ArtistComments from \"../ArtistComments/ArtistComments\";\n\nconst SingleArtistDetails = ({\n  data: {\n    artist: { name, picture_big }\n  },\n  artist_id\n}) => {\n  return (\n    <main className=\"single-artist-container\">\n      <section className=\"single-artist-bio\">\n        <h1>{name}</h1>\n        <img src={picture_big} alt=\"Artist cover\" />\n        <Link to=\"/\" className=\"icon\">\n          <i className=\"far fa-arrow-alt-circle-left fa-2x\" />\n        </Link>\n      </section>\n      <section className=\"single-artist-tracks\">\n        <ArtistTopTracks artist_id={artist_id} />\n      </section>\n      <section className=\"single-artist-albums\">\n        <ArtistAlbums artist_id={artist_id} />\n      </section>\n      <section className=\"single-artist-comments\">\n        <ArtistComments artist_id={artist_id} />\n      </section>\n    </main>\n  );\n};\n\nexport default SingleArtistDetails;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Loader from \"../Loader/Loader\";\nimport SingleArtistDetails from \"./SingleArtistDetails\";\n\nconst SingleArtistPage = ({ artist_id }) => {\n  const ARTIST_QUERY = gql`\n    query artistQuery {\n      artist(name: \"${artist_id}\") {\n       name\n       picture_big\n   }\n }\n `;\n\n  const { loading, data } = useQuery(ARTIST_QUERY);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <SingleArtistDetails data={data} artist_id={artist_id} />\n  );\n};\n\nexport default SingleArtistPage;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst SingleAlbumTrack = ({\n  data: {\n    singleAlbum: {\n      title,\n      release_date,\n      explicit_lyrics,\n      fans,\n      cover_medium,\n      artist: { name, picture_big, id },\n      tracks: { data }\n    }\n  }\n}) => {\n  return (\n    <main className=\"album-details-container\">\n      <div className=\"home-link\">\n        <Link to=\"/\" className=\"artist-link\">\n          <h3>Home</h3>\n        </Link>\n      </div>\n      <div className=\"album-image\">\n        <img src={cover_medium} alt=\"Album Cover\" />\n      </div>\n      <div className=\"album-details\">\n        {explicit_lyrics ? <h5>EXPLICIT</h5> : null}\n        <h1>{title}</h1>\n        <div>\n          <img src={picture_big} alt=\"Artist Avatar\" />\n          <Link to={`/artist/${id}`} className=\"artist-link\">\n            <h2>{name}</h2>\n          </Link>\n        </div>\n        <p>{`${data.length} tracks - ${release_date} - ${fans} fans`}</p>\n      </div>\n      <div className=\"album-tracks\">\n        <ul>\n          {data.map((track, index) => {\n            const { id, title_short, preview } = track;\n            return (\n              <li key={id}>\n                <h1>\n                  {`${index + 1}`} : {title_short}\n                </h1>\n                <iframe title={title_short} frameBorder=\"0\" src={preview} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </main>\n  );\n};\n\nexport default SingleAlbumTrack;\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport SingleAlbumDetails from \"./SingleAlbumDetails\";\nimport Loader from \"../Loader/Loader\";\n\nconst SingleAlbum = ({ album_id }) => {\n  const SINGLE_ALBUM_QUERY = gql`\n  query singleAlbumQuery {\n    singleAlbum(id: ${album_id}) {\n      title\n      cover_medium\n      release_date\n      explicit_lyrics\n      fans\n      artist {\n        name\n        picture_big\n        id\n      }\n      tracks {\n        data {\n          title_short\n          explicit_lyrics\n          preview\n          id\n        }\n      }\n    }\n  }\n  `;\n\n  const { loading, data } = useQuery(SINGLE_ALBUM_QUERY);\n\n  return loading ? <Loader /> : <SingleAlbumDetails data={data} />;\n};\n\nexport default SingleAlbum;\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport \"./styles/style.scss\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport SingleArtistPage from \"./components/SingleArtist/SingleArtistPage\";\nimport SingleAlbumPage from \"./components/SingleAlbum/SingleAlbumPage\";\n\nfunction App() {\n  return (\n    <>\n      <Router primary={false}>\n        <MainPage path=\"/\" />\n        <SingleArtistPage path=\"/artist/:artist_id\" />\n        <SingleAlbumPage path=\"/album/:album_id\" />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { ApolloClient } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}